[0.153s] Invoking command in '/home/xinchen/Dev/SRTP/build/motor_controller': AMENT_PREFIX_PATH=/home/xinchen/Dev/SRTP/install/custom_interface:${AMENT_PREFIX_PATH} CMAKE_PREFIX_PATH=/home/xinchen/Dev/SRTP/install/custom_interface:/home/xinchen/Dev/SRTP/install/motor_controller:/home/xinchen/Dev/SRTP/install/launch_files:/home/xinchen/Dev/SRTP/install/dynamixel_workbench:/home/xinchen/Dev/SRTP/install/dynamixel_workbench_toolbox:/home/xinchen/Dev/SRTP/install/dynamixel_sdk_examples:/home/xinchen/Dev/SRTP/install/dynamixel_sdk_custom_interfaces:/home/xinchen/Dev/SRTP/install/dynamixel_sdk:/opt/ros/foxy LD_LIBRARY_PATH=/home/xinchen/Dev/SRTP/install/custom_interface/lib:${LD_LIBRARY_PATH} PYTHONPATH=/home/xinchen/Dev/SRTP/install/custom_interface/lib/python3.8/site-packages:${PYTHONPATH} /usr/bin/cmake --build /home/xinchen/Dev/SRTP/build/motor_controller -- -j6 -l6
[0.335s] [35m[1mScanning dependencies of target torque_controller[0m
[0.348s] [ 50%] Built target position_controller
[0.416s] [ 75%] [32mBuilding CXX object CMakeFiles/torque_controller.dir/src/torque_controller.cpp.o[0m
[3.750s] In file included from [01m[K/usr/include/c++/9/ext/alloc_traits.h:36[m[K,
[3.750s]                  from [01m[K/usr/include/c++/9/bits/stl_construct.h:61[m[K,
[3.750s]                  from [01m[K/usr/include/c++/9/memory:64[m[K,
[3.750s]                  from [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:1[m[K:
[3.751s] /usr/include/c++/9/bits/alloc_traits.h: In instantiation of â€˜[01m[Kstruct std::allocator_traits<std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&> >[m[Kâ€™:
[3.751s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:47:9:[m[K   required from â€˜[01m[Kclass rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >[m[Kâ€™
[3.751s] [01m[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:91:1:[m[K   required by substitution of â€˜[01m[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class CallbackMessageT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = custom_interface::msg::Torque_<std::allocator<void> >; CallbackT = std::_Bind<void (TorqueController::*(TorqueController*, std::_Placeholder<1>))(const custom_interface::msg::Torque_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; SubscriptionT = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >][m[Kâ€™
[3.751s] [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:21:101:[m[K   required from here
[3.751s] [01m[K/usr/include/c++/9/bits/alloc_traits.h:399:13:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™
[3.751s]   399 |       using [01;31m[Kpointer[m[K = _Tp*;
[3.751s]       |             [01;31m[K^~~~~~~[m[K
[3.752s] [01m[K/usr/include/c++/9/bits/alloc_traits.h:402:13:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™
[3.752s]   402 |       using [01;31m[Kconst_pointer[m[K = const _Tp*;
[3.752s]       |             [01;31m[K^~~~~~~~~~~~~[m[K
[3.765s] In file included from [01m[K/usr/include/c++/9/memory:80[m[K,
[3.765s]                  from [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:1[m[K:
[3.765s] /usr/include/c++/9/bits/unique_ptr.h: In instantiation of â€˜[01m[Kstruct std::default_delete<const custom_interface::msg::Torque_<std::allocator<void> >&>[m[Kâ€™:
[3.766s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:119:18:[m[K   required from â€˜[01m[Kclass rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >[m[Kâ€™
[3.766s] [01m[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:91:1:[m[K   required by substitution of â€˜[01m[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class CallbackMessageT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = custom_interface::msg::Torque_<std::allocator<void> >; CallbackT = std::_Bind<void (TorqueController::*(TorqueController*, std::_Placeholder<1>))(const custom_interface::msg::Torque_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; SubscriptionT = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >][m[Kâ€™
[3.766s] [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:21:101:[m[K   required from here
[3.766s] [01m[K/usr/include/c++/9/bits/unique_ptr.h:71:9:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™
[3.766s]    71 |         [01;31m[Kdefault_delete[m[K(const default_delete<_Up>&) noexcept { }
[3.766s]       |         [01;31m[K^~~~~~~~~~~~~~[m[K
[3.767s] [01m[K/usr/include/c++/9/bits/unique_ptr.h:75:7:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™
[3.767s]    75 |       [01;31m[Koperator[m[K()(_Tp* __ptr) const
[3.767s]       |       [01;31m[K^~~~~~~~[m[K
[3.799s] In file included from [01m[K/opt/ros/foxy/include/rclcpp/subscription_base.hpp:29[m[K,
[3.799s]                  from [01m[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:26[m[K,
[3.799s]                  from [01m[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20[m[K,
[3.799s]                  from [01m[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24[m[K,
[3.799s]                  from [01m[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18[m[K,
[3.800s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20[m[K,
[3.800s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executor.hpp:33[m[K,
[3.800s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
[3.800s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executors.hpp:21[m[K,
[3.800s]                  from [01m[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146[m[K,
[3.800s]                  from [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:2[m[K:
[3.800s] /opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Kclass rclcpp::AnySubscriptionCallback<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >[m[Kâ€™:
[3.801s] [01m[K/opt/ros/foxy/include/rclcpp/subscription.hpp:347:57:[m[K   required from â€˜[01m[Kclass rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >[m[Kâ€™
[3.801s] [01m[K/usr/include/c++/9/type_traits:1313:45:[m[K   required by substitution of â€˜[01m[Ktemplate<class _From1, class _To1, class> static std::true_type std::__is_convertible_helper<rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >*, rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >*, false>::__test<_From1, _To1, <template-parameter-1-3> >(int) [with _From1 = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >*; _To1 = rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >*; <template-parameter-1-3> = <missing>][m[Kâ€™
[3.801s] [01m[K/usr/include/c++/9/type_traits:1322:42:[m[K   required from â€˜[01m[Kstruct std::__is_convertible_helper<rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >*, rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >*, false>[m[Kâ€™
[3.801s] [01m[K/usr/include/c++/9/type_traits:1328:12:[m[K   required from â€˜[01m[Kstruct std::is_convertible<rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >*, rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >*>[m[Kâ€™
[3.801s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:927:12:[m[K   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
[3.801s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1099:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp, __gnu_cxx::_Lock_policy _Lp> template<class _Yp> using _Assignable = std::__shared_ptr<_Tp, _Lp>::_Compatible<_Yp, std::__shared_ptr<_Tp, _Lp>&> [with _Yp = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >; _Tp = rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[3.802s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1271:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::__shared_ptr<rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >, __gnu_cxx::_S_atomic>::_Assignable<_Yp> std::__shared_ptr<rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >, __gnu_cxx::_S_atomic>::operator=<_Yp>(std::__shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >][m[Kâ€™
[3.802s] [01m[K/usr/include/c++/9/type_traits:1010:12:[m[K   required from â€˜[01m[Kstruct std::is_assignable<std::__shared_ptr<rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >, __gnu_cxx::_S_atomic>&, std::shared_ptr<rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > > > >[m[Kâ€™
[3.802s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:111:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > > >; _Tp = rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >][m[Kâ€™
[3.802s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:341:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >][m[Kâ€™
[3.802s] [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:21:101:[m[K   required from here
[3.802s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:111:8:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const _Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™ cannot be overloaded with â€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[3.802s]   111 |   void [01;31m[Kset[m[K(CallbackT callback)
[3.803s]       |        [01;31m[K^~~[m[K
[3.803s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:83:8:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[3.803s]    83 |   void [01;36m[Kset[m[K(CallbackT callback)
[3.803s]       |        [01;36m[K^~~[m[K
[3.804s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:125:8:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const _Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™ cannot be overloaded with â€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[3.804s]   125 |   void [01;31m[Kset[m[K(CallbackT callback)
[3.804s]       |        [01;31m[K^~~[m[K
[3.804s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:97:8:[m[K [01;36m[Knote: [m[Kprevious declaration â€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[3.804s]    97 |   void [01;36m[Kset[m[K(CallbackT callback)
[3.804s]       |        [01;36m[K^~~[m[K
[3.809s] [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:[m[K In constructor â€˜[01m[KTorqueController::TorqueController()[m[Kâ€™:
[3.810s] [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:21:101:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >::SharedPtr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > > >[m[Kâ€™} and â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > > >[m[Kâ€™)
[3.810s]    21 |             "torque", 10, std::bind(&TorqueController::torque_callback, this, std::placeholders::_1)[01;31m[K)[m[K;
[3.811s]       |                                                                                                     [01;31m[K^[m[K
[3.811s] In file included from [01m[K/usr/include/c++/9/memory:81[m[K,
[3.811s]                  from [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:1[m[K:
[3.811s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:309:19:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >][m[Kâ€™
[3.811s]   309 |       shared_ptr& [01;36m[Koperator[m[K=(const shared_ptr&) noexcept = default;
[3.812s]       |                   [01;36m[K^~~~~~~~[m[K
[3.812s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:309:29:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kconst std::shared_ptr<rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > > >&[m[Kâ€™
[3.812s]   309 |       shared_ptr& operator=([01;36m[Kconst shared_ptr&[m[K) noexcept = default;
[3.812s]       |                             [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[3.813s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:313:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >][m[Kâ€™
[3.813s]   313 |  [01;36m[Koperator[m[K=(const shared_ptr<_Yp>& __r) noexcept
[3.814s]       |  [01;36m[K^~~~~~~~[m[K
[3.814s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:313:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.814s] /usr/include/c++/9/bits/shared_ptr.h: In substitution of â€˜[01m[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > > >&; _Tp = rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >][m[Kâ€™:
[3.814s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:313:2:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >][m[Kâ€™
[3.814s] [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:21:101:[m[K   required from here
[3.814s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:111:8:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > > >&>[m[Kâ€™
[3.815s]   111 |  using [01;31m[K_Assignable[m[K = typename enable_if<
[3.815s]       |        [01;31m[K^~~~~~~~~~~[m[K
[3.815s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:324:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >][m[Kâ€™
[3.815s]   324 |  [01;36m[Koperator[m[K=(auto_ptr<_Yp>&& __r)
[3.815s]       |  [01;36m[K^~~~~~~~[m[K
[3.815s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:324:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.815s] [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:21:101:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::auto_ptr<_Up>[m[Kâ€™
[3.816s]    21 |             "torque", 10, std::bind(&TorqueController::torque_callback, this, std::placeholders::_1)[01;36m[K)[m[K;
[3.816s]       |                                                                                                     [01;36m[K^[m[K
[3.816s] In file included from [01m[K/usr/include/c++/9/memory:81[m[K,
[3.816s]                  from [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:1[m[K:
[3.816s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:333:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >][m[Kâ€™
[3.816s]   333 |       [01;36m[Koperator[m[K=(shared_ptr&& __r) noexcept
[3.816s]       |       [01;36m[K^~~~~~~~[m[K
[3.817s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:333:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > > >[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > > >&&[m[Kâ€™
[3.817s]   333 |       operator=([01;36m[Kshared_ptr&& __r[m[K) noexcept
[3.817s]       |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[3.817s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:341:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >][m[Kâ€™
[3.817s]   341 |  [01;36m[Koperator[m[K=(shared_ptr<_Yp>&& __r) noexcept
[3.817s]       |  [01;36m[K^~~~~~~~[m[K
[3.817s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:341:2:[m[K [01;36m[Knote: [m[K  substitution of deduced template arguments resulted in errors seen above
[3.818s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:349:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Subscription<custom_interface::msg::Torque_<std::allocator<void> > >][m[Kâ€™
[3.818s]   349 |  [01;36m[Koperator[m[K=(unique_ptr<_Yp, _Del>&& __r)
[3.818s]       |  [01;36m[K^~~~~~~~[m[K
[3.818s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:349:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.818s] [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:21:101:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::shared_ptr<rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::unique_ptr<_Tp, _Dp>[m[Kâ€™
[3.818s]    21 |             "torque", 10, std::bind(&TorqueController::torque_callback, this, std::placeholders::_1)[01;36m[K)[m[K;
[3.818s]       |                                                                                                     [01;36m[K^[m[K
[4.459s] In file included from [01m[K/opt/ros/foxy/include/rclcpp/node_interfaces/node_topics_interface.hpp:32[m[K,
[4.460s]                  from [01m[K/opt/ros/foxy/include/rclcpp/node.hpp:55[m[K,
[4.460s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[4.460s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executors.hpp:22[m[K,
[4.460s]                  from [01m[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146[m[K,
[4.460s]                  from [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:2[m[K:
[4.461s] /opt/ros/foxy/include/rclcpp/subscription_factory.hpp: In instantiation of â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = custom_interface::msg::Torque_<std::allocator<void> >; CallbackT = std::_Bind<void (TorqueController::*(TorqueController*, std::_Placeholder<1>))(const custom_interface::msg::Torque_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; SubscriptionT = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >][m[Kâ€™:
[4.461s] [01m[K/opt/ros/foxy/include/rclcpp/create_subscription.hpp:144:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = custom_interface::msg::Torque_<std::allocator<void> >; CallbackT = std::_Bind<void (TorqueController::*(TorqueController*, std::_Placeholder<1>))(const custom_interface::msg::Torque_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; SubscriptionT = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >; NodeT = rclcpp::Node&; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >][m[Kâ€™
[4.461s] [01m[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:98:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = custom_interface::msg::Torque_<std::allocator<void> >; CallbackT = std::_Bind<void (TorqueController::*(TorqueController*, std::_Placeholder<1>))(const custom_interface::msg::Torque_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; SubscriptionT = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >][m[Kâ€™
[4.461s] [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:21:101:[m[K   required from here
[4.461s] [01m[K/opt/ros/foxy/include/rclcpp/subscription_factory.hpp:97:3:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::AnySubscriptionCallback<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >::set(std::_Bind<void (TorqueController::*(TorqueController*, std::_Placeholder<1>))(const custom_interface::msg::Torque_<std::allocator<void> >&) const>)[m[Kâ€™
[4.461s]    97 |   [01;31m[Kany_subscription_callback[m[K.set(std::forward<CallbackT>(callback));
[4.462s]       |   [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[4.462s] In file included from [01m[K/opt/ros/foxy/include/rclcpp/subscription_base.hpp:29[m[K,
[4.462s]                  from [01m[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:26[m[K,
[4.462s]                  from [01m[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20[m[K,
[4.462s]                  from [01m[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24[m[K,
[4.462s]                  from [01m[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18[m[K,
[4.462s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20[m[K,
[4.462s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executor.hpp:33[m[K,
[4.463s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
[4.463s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executors.hpp:21[m[K,
[4.463s]                  from [01m[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146[m[K,
[4.463s]                  from [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:2[m[K:
[4.463s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:83:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[4.463s]    83 |   void [01;36m[Kset[m[K(CallbackT callback)
[4.463s]       |        [01;36m[K^~~[m[K
[4.464s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:83:8:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.464s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:81:17:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[4.464s]    81 |     >::type * = [01;31m[Knullptr[m[K
[4.464s]       |                 [01;31m[K^~~~~~~[m[K
[4.464s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:97:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[4.464s]    97 |   void [01;36m[Kset[m[K(CallbackT callback)
[4.464s]       |        [01;36m[K^~~[m[K
[4.465s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:97:8:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.465s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:95:17:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[4.465s]    95 |     >::type * = [01;31m[Knullptr[m[K
[4.465s]       |                 [01;31m[K^~~~~~~[m[K
[4.465s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:139:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&, std::default_delete<const custom_interface::msg::Torque_<std::allocator<void> >&> >)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[4.465s]   139 |   void [01;36m[Kset[m[K(CallbackT callback)
[4.465s]       |        [01;36m[K^~~[m[K
[4.465s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:139:8:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.466s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:137:17:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[4.466s]   137 |     >::type * = [01;31m[Knullptr[m[K
[4.466s]       |                 [01;31m[K^~~~~~~[m[K
[4.467s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:153:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&, std::default_delete<const custom_interface::msg::Torque_<std::allocator<void> >&> >, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[4.467s]   153 |   void [01;36m[Kset[m[K(CallbackT callback)
[4.467s]       |        [01;36m[K^~~[m[K
[4.467s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:153:8:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.467s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:151:17:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[4.467s]   151 |     >::type * = [01;31m[Knullptr[m[K
[4.467s]       |                 [01;31m[K^~~~~~~[m[K
[5.727s] In file included from [01m[K/usr/include/aarch64-linux-gnu/c++/9/bits/c++allocator.h:33[m[K,
[5.727s]                  from [01m[K/usr/include/c++/9/bits/allocator.h:46[m[K,
[5.727s]                  from [01m[K/usr/include/c++/9/memory:63[m[K,
[5.727s]                  from [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:1[m[K:
[5.728s] /usr/include/c++/9/ext/new_allocator.h: In instantiation of â€˜[01m[Kclass __gnu_cxx::new_allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>[m[Kâ€™:
[5.728s] [01m[K/usr/include/c++/9/bits/allocator.h:111:11:[m[K   required from â€˜[01m[Kclass std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>[m[Kâ€™
[5.728s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1365:63:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> struct std::__shared_ptr<std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>, __gnu_cxx::_S_atomic>::__has_esft_base<_Yp, std::__void_t<decltype (__enable_shared_from_this_base(declval<const std::__shared_count<__gnu_cxx::_S_atomic>&>(), declval<_Yp*>()))> > [with _Yp = std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>][m[Kâ€™
[5.728s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1387:21:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp, class _Yp2> typename std::enable_if<(! std::__shared_ptr<std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>, __gnu_cxx::_S_atomic>::__has_esft_base<_Yp2, void>::value), void>::type std::__shared_ptr<std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>, __gnu_cxx::_S_atomic>::_M_enable_shared_from_this_with<_Yp, _Yp2>(_Yp*) [with _Yp = std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>; _Yp2 = std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>][m[Kâ€™
[5.728s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1345:4:[m[K   required from â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&> >; _Args = {std::allocator<void>&}; _Tp = std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[5.728s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:359:59:[m[K   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
[5.729s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:717:39:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>; _Args = {std::allocator<void>&}][m[Kâ€™
[5.729s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:68:56:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, Alloc>::AnySubscriptionCallback(std::shared_ptr<_Tp>) [with MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[5.735s] [01m[K/opt/ros/foxy/include/rclcpp/subscription_factory.hpp:96:57:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = custom_interface::msg::Torque_<std::allocator<void> >; CallbackT = std::_Bind<void (TorqueController::*(TorqueController*, std::_Placeholder<1>))(const custom_interface::msg::Torque_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; SubscriptionT = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >][m[Kâ€™
[5.735s] [01m[K/opt/ros/foxy/include/rclcpp/create_subscription.hpp:144:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = custom_interface::msg::Torque_<std::allocator<void> >; CallbackT = std::_Bind<void (TorqueController::*(TorqueController*, std::_Placeholder<1>))(const custom_interface::msg::Torque_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; SubscriptionT = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >; NodeT = rclcpp::Node&; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >][m[Kâ€™
[5.735s] [01m[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:98:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = custom_interface::msg::Torque_<std::allocator<void> >; CallbackT = std::_Bind<void (TorqueController::*(TorqueController*, std::_Placeholder<1>))(const custom_interface::msg::Torque_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; SubscriptionT = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >][m[Kâ€™
[5.735s] [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:21:101:[m[K   required from here
[5.735s] [01m[K/usr/include/c++/9/ext/new_allocator.h:63:26:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™
[5.735s]    63 |       typedef _Tp*       [01;31m[Kpointer[m[K;
[5.736s]       |                          [01;31m[K^~~~~~~[m[K
[5.736s] [01m[K/usr/include/c++/9/ext/new_allocator.h:64:26:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™
[5.736s]    64 |       typedef const _Tp* [01;31m[Kconst_pointer[m[K;
[5.736s]       |                          [01;31m[K^~~~~~~~~~~~~[m[K
[5.736s] In file included from [01m[K/usr/include/c++/9/memory:63[m[K,
[5.736s]                  from [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:1[m[K:
[5.736s] /usr/include/c++/9/bits/allocator.h: In instantiation of â€˜[01m[Kclass std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>[m[Kâ€™:
[5.737s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1365:63:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp> struct std::__shared_ptr<std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>, __gnu_cxx::_S_atomic>::__has_esft_base<_Yp, std::__void_t<decltype (__enable_shared_from_this_base(declval<const std::__shared_count<__gnu_cxx::_S_atomic>&>(), declval<_Yp*>()))> > [with _Yp = std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>][m[Kâ€™
[5.737s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1387:21:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Yp, class _Yp2> typename std::enable_if<(! std::__shared_ptr<std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>, __gnu_cxx::_S_atomic>::__has_esft_base<_Yp2, void>::value), void>::type std::__shared_ptr<std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>, __gnu_cxx::_S_atomic>::_M_enable_shared_from_this_with<_Yp, _Yp2>(_Yp*) [with _Yp = std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>; _Yp2 = std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>][m[Kâ€™
[5.737s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1345:4:[m[K   required from â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&> >; _Args = {std::allocator<void>&}; _Tp = std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[5.737s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:359:59:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&> >; _Args = {std::allocator<void>&}; _Tp = std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>][m[Kâ€™
[5.737s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:701:14:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>; _Alloc = std::allocator<std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&> >; _Args = {std::allocator<void>&}][m[Kâ€™
[5.737s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:717:39:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = std::allocator<const custom_interface::msg::Torque_<std::allocator<void> >&>; _Args = {std::allocator<void>&}][m[Kâ€™
[5.737s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:68:56:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, Alloc>::AnySubscriptionCallback(std::shared_ptr<_Tp>) [with MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[5.738s] [01m[K/opt/ros/foxy/include/rclcpp/subscription_factory.hpp:96:57:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = custom_interface::msg::Torque_<std::allocator<void> >; CallbackT = std::_Bind<void (TorqueController::*(TorqueController*, std::_Placeholder<1>))(const custom_interface::msg::Torque_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; SubscriptionT = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >][m[Kâ€™
[5.738s] [01m[K/opt/ros/foxy/include/rclcpp/create_subscription.hpp:144:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = custom_interface::msg::Torque_<std::allocator<void> >; CallbackT = std::_Bind<void (TorqueController::*(TorqueController*, std::_Placeholder<1>))(const custom_interface::msg::Torque_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; SubscriptionT = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >; NodeT = rclcpp::Node&; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >][m[Kâ€™
[5.738s] [01m[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:98:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = custom_interface::msg::Torque_<std::allocator<void> >; CallbackT = std::_Bind<void (TorqueController::*(TorqueController*, std::_Placeholder<1>))(const custom_interface::msg::Torque_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; SubscriptionT = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >][m[Kâ€™
[5.738s] [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:21:101:[m[K   required from here
[5.738s] [01m[K/usr/include/c++/9/bits/allocator.h:116:26:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™
[5.738s]   116 |       typedef _Tp*       [01;31m[Kpointer[m[K;
[5.738s]       |                          [01;31m[K^~~~~~~[m[K
[5.739s] [01m[K/usr/include/c++/9/bits/allocator.h:117:26:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™
[5.739s]   117 |       typedef const _Tp* [01;31m[Kconst_pointer[m[K;
[5.739s]       |                          [01;31m[K^~~~~~~~~~~~~[m[K
[5.739s] In file included from [01m[K/usr/include/aarch64-linux-gnu/c++/9/bits/c++allocator.h:33[m[K,
[5.739s]                  from [01m[K/usr/include/c++/9/bits/allocator.h:46[m[K,
[5.739s]                  from [01m[K/usr/include/c++/9/memory:63[m[K,
[5.739s]                  from [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:1[m[K:
[5.739s] /usr/include/c++/9/ext/new_allocator.h: In instantiation of â€˜[01m[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = TorqueController; _Args = {}; _Tp = TorqueController][m[Kâ€™:
[5.740s] [01m[K/usr/include/c++/9/bits/alloc_traits.h:483:4:[m[K   required from â€˜[01m[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = TorqueController; _Args = {}; _Tp = TorqueController; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<TorqueController>][m[Kâ€™
[5.740s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:548:39:[m[K   required from â€˜[01m[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {}; _Tp = TorqueController; _Alloc = std::allocator<TorqueController>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[5.740s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:679:16:[m[K   required from â€˜[01m[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = TorqueController; _Alloc = std::allocator<TorqueController>; _Args = {}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[5.740s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1344:71:[m[K   required from â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<TorqueController>; _Args = {}; _Tp = TorqueController; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[5.740s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:359:59:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<TorqueController>; _Args = {}; _Tp = TorqueController][m[Kâ€™
[5.740s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:701:14:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = TorqueController; _Alloc = std::allocator<TorqueController>; _Args = {}][m[Kâ€™
[5.740s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:717:39:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = TorqueController; _Args = {}][m[Kâ€™
[5.741s] [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:40:53:[m[K   required from here
[5.741s] [01m[K/usr/include/c++/9/ext/new_allocator.h:146:4:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KTorqueController::TorqueController()[m[Kâ€™ is private within this context
[5.741s]   146 |  { [01;31m[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)[m[K; }
[5.741s]       |    [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[5.741s] [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:18:5:[m[K [01;36m[Knote: [m[Kdeclared private here
[5.741s]    18 |     [01;36m[KTorqueController[m[K() : Node("TorqueContoller")
[5.741s]       |     [01;36m[K^~~~~~~~~~~~~~~~[m[K
[6.424s] In file included from [01m[K/usr/include/c++/9/bits/shared_ptr.h:52[m[K,
[6.425s]                  from [01m[K/usr/include/c++/9/memory:81[m[K,
[6.425s]                  from [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:1[m[K:
[6.425s] /usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of â€˜[01m[Kclass std::__shared_ptr_access<const custom_interface::msg::Torque_<std::allocator<void> >&, __gnu_cxx::_S_atomic, false, false>[m[Kâ€™:
[6.425s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1080:11:[m[K   required from â€˜[01m[Kclass std::__shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&, __gnu_cxx::_S_atomic>[m[Kâ€™
[6.425s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:[m[K   recursively required from â€˜[01m[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[6.425s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:[m[K   required from here
[6.426s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1012:7:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kstd::__shared_ptr_access<const custom_interface::msg::Torque_<std::allocator<void> >&, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™}
[6.426s]  1012 |       [01;31m[Koperator[m[K->() const noexcept
[6.426s]       |       [01;31m[K^~~~~~~~[m[K
[6.426s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1020:7:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kstd::__shared_ptr_access<const custom_interface::msg::Torque_<std::allocator<void> >&, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™}
[6.426s]  1020 |       [01;31m[K_M_get[m[K() const noexcept
[6.426s]       |       [01;31m[K^~~~~~[m[K
[6.426s] /usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of â€˜[01m[Kclass std::__shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&, __gnu_cxx::_S_atomic>[m[Kâ€™:
[6.427s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:[m[K   recursively required from â€˜[01m[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[6.427s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:[m[K   required from here
[6.427s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1094:8:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™
[6.427s]  1094 |  using [01;31m[K_Compatible[m[K = typename
[6.427s]       |        [01;31m[K^~~~~~~~~~~[m[K
[6.429s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1104:8:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™
[6.429s]  1104 |  using [01;31m[K_UniqCompatible[m[K = typename enable_if<__and_<
[6.429s]       |        [01;31m[K^~~~~~~~~~~~~~~[m[K
[6.429s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1162:2:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kstd::__shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&, __gnu_cxx::_S_atomic>::element_type[m[Kâ€™ {aka â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™}
[6.429s]  1162 |  [01;31m[K__shared_ptr[m[K(const __shared_ptr<_Yp, _Lp>& __r,
[6.430s]       |  [01;31m[K^~~~~~~~~~~~[m[K
[6.430s] /usr/include/c++/9/bits/shared_ptr_base.h: In substitution of â€˜[01m[Ktemplate<class _Tp, __gnu_cxx::_Lock_policy _Lp> template<class _Yp, class _Res> using _Compatible = typename std::enable_if<std::__sp_compatible_with<_Yp*, _Tp*>::value, _Res>::type [with _Yp = _Yp; _Res = void; _Tp = const custom_interface::msg::Torque_<std::allocator<void> >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™:
[6.430s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1172:2:[m[K   required from â€˜[01m[Kclass std::__shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&, __gnu_cxx::_S_atomic>[m[Kâ€™
[6.430s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:[m[K   recursively required from â€˜[01m[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[6.430s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:[m[K   required from here
[6.430s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1094:8:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™
[6.430s]  1094 |  using [01;31m[K_Compatible[m[K = typename
[6.430s]       |        [01;31m[K^~~~~~~~~~~[m[K
[6.431s] /usr/include/c++/9/bits/shared_ptr_base.h: In substitution of â€˜[01m[Ktemplate<class _Tp, __gnu_cxx::_Lock_policy _Lp> template<class _Yp, class _Del, class _Res, class _Ptr> using _UniqCompatible = typename std::enable_if<std::__and_<std::__sp_compatible_with<_Yp*, _Tp*>, std::is_convertible<_Ptr, typename std::remove_extent<_Up>::type*> >::value, _Res>::type [with _Yp = _Yp; _Del = _Del; _Res = void; _Ptr = typename std::unique_ptr<_Tp, _Dp>::pointer; _Tp = const custom_interface::msg::Torque_<std::allocator<void> >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™:
[6.431s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1203:2:[m[K   required from â€˜[01m[Kclass std::__shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&, __gnu_cxx::_S_atomic>[m[Kâ€™
[6.431s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:[m[K   recursively required from â€˜[01m[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[6.431s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:[m[K   required from here
[6.431s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1104:8:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™
[6.431s]  1104 |  using [01;31m[K_UniqCompatible[m[K = typename enable_if<__and_<
[6.431s]       |        [01;31m[K^~~~~~~~~~~~~~~[m[K
[6.431s] /usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of â€˜[01m[Kclass std::__shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&, __gnu_cxx::_S_atomic>[m[Kâ€™:
[6.432s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:[m[K   recursively required from â€˜[01m[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[6.432s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:[m[K   required from here
[6.432s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1219:2:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™
[6.432s]  1219 |  [01;31m[K__shared_ptr[m[K(unique_ptr<_Tp1, _Del>&& __r, __sp_array_delete)
[6.432s]       |  [01;31m[K^~~~~~~~~~~~[m[K
[6.432s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1309:7:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kstd::__shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&, __gnu_cxx::_S_atomic>::element_type[m[Kâ€™ {aka â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™}
[6.432s]  1309 |       [01;31m[Kget[m[K() const noexcept
[6.433s]       |       [01;31m[K^~~[m[K
[6.433s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1404:24:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kstd::__shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&, __gnu_cxx::_S_atomic>::element_type[m[Kâ€™ {aka â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™}
[6.433s]  1404 |       element_type*    [01;31m[K_M_ptr[m[K;         // Contained pointer.
[6.433s]       |                        [01;31m[K^~~~~~[m[K
[6.434s] In file included from [01m[K/usr/include/c++/9/memory:81[m[K,
[6.434s]                  from [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:1[m[K:
[6.434s] /usr/include/c++/9/bits/shared_ptr.h: In instantiation of â€˜[01m[Kclass std::shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&>[m[Kâ€™:
[6.434s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:[m[K   recursively required from â€˜[01m[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[6.434s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:[m[K   required from here
[6.434s] [01m[K/usr/include/c++/9/bits/shared_ptr.h:234:2:[m[K [01;31m[Kerror: [m[Kforming pointer to reference type â€˜[01m[Kstd::shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&>::element_type[m[Kâ€™ {aka â€˜[01m[Kconst custom_interface::msg::Torque_<std::allocator<void> >&[m[Kâ€™}
[6.434s]   234 |  [01;31m[Kshared_ptr[m[K(const shared_ptr<_Yp>& __r, element_type* __p) noexcept
[6.435s]       |  [01;31m[K^~~~~~~~~~[m[K
[6.451s] In file included from [01m[K/usr/include/c++/9/bits/shared_ptr.h:52[m[K,
[6.451s]                  from [01m[K/usr/include/c++/9/memory:81[m[K,
[6.452s]                  from [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:1[m[K:
[6.452s] /usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of â€˜[01m[Kconstexpr std::__shared_ptr<_Tp, _Lp>::__shared_ptr() [with _Tp = const custom_interface::msg::Torque_<std::allocator<void> >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™:
[6.452s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1287:9:[m[K   required from â€˜[01m[Kvoid std::__shared_ptr<_Tp, _Lp>::reset() [with _Tp = const custom_interface::msg::Torque_<std::allocator<void> >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[6.452s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:109:5:[m[K   required from â€˜[01m[Kvoid rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::return_message(std::shared_ptr<_Tp>&) [with MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[6.452s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:107:16:[m[K   required from here
[6.452s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1119:32:[m[K [01;31m[Kerror: [m[Kusing invalid field â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::_M_ptr[m[Kâ€™
[6.453s]  1119 |       : _M_ptr(0), _M_refcount([01;31m[K)[m[K
[6.453s]       |                                [01;31m[K^[m[K
[6.453s] /usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of â€˜[01m[Kvoid std::__shared_ptr<_Tp, _Lp>::swap(std::__shared_ptr<_Tp, _Lp>&) [with _Tp = const custom_interface::msg::Torque_<std::allocator<void> >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™:
[6.453s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1287:24:[m[K   required from â€˜[01m[Kvoid std::__shared_ptr<_Tp, _Lp>::reset() [with _Tp = const custom_interface::msg::Torque_<std::allocator<void> >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[6.453s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:109:5:[m[K   required from â€˜[01m[Kvoid rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::return_message(std::shared_ptr<_Tp>&) [with MessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; Alloc = std::allocator<void>][m[Kâ€™
[6.453s] [01m[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:107:16:[m[K   required from here
[6.453s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1326:12:[m[K [01;31m[Kerror: [m[Kusing invalid field â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::_M_ptr[m[Kâ€™
[6.454s]  1326 |  std::swap([01;31m[K_M_ptr[m[K, __other._M_ptr);
[6.454s]       |            [01;31m[K^~~~~~[m[K
[6.454s] [01m[K/usr/include/c++/9/bits/shared_ptr_base.h:1326:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass std::__shared_ptr<const custom_interface::msg::Torque_<std::allocator<void> >&, __gnu_cxx::_S_atomic>[m[Kâ€™ has no member named â€˜[01m[K_M_ptr[m[Kâ€™
[6.454s]  1326 |  std::swap(_M_ptr, [01;31m[K__other._M_ptr[m[K);
[6.454s]       |                    [01;31m[K~~~~~~~~^~~~~~[m[K
[6.484s] In file included from [01m[K/usr/include/c++/9/future:48[m[K,
[6.486s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executors.hpp:18[m[K,
[6.486s]                  from [01m[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146[m[K,
[6.486s]                  from [01m[K/home/xinchen/Dev/SRTP/src/motor_controller/src/torque_controller.cpp:2[m[K:
[6.486s] [01m[K/usr/include/c++/9/bits/std_function.h:[m[K At global scope:
[6.486s] [01m[K/usr/include/c++/9/bits/std_function.h:667:7:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = custom_interface::msg::Torque_<std::allocator<void> >; CallbackT = std::_Bind<void (TorqueController::*(TorqueController*, std::_Placeholder<1>))(const custom_interface::msg::Torque_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; SubscriptionT = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >]::<lambda(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&)>; <template-parameter-2-2> = void; <template-parameter-2-3> = void; _Res = std::shared_ptr<rclcpp::SubscriptionBase>; _ArgTypes = {rclcpp::node_interfaces::NodeBaseInterface*, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&}][m[Kâ€™, declared using local type â€˜[01m[Krclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = custom_interface::msg::Torque_<std::allocator<void> >; CallbackT = std::_Bind<void (TorqueController::*(TorqueController*, std::_Placeholder<1>))(const custom_interface::msg::Torque_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; CallbackMessageT = const custom_interface::msg::Torque_<std::allocator<void> >&; SubscriptionT = rclcpp::Subscription<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const custom_interface::msg::Torque_<std::allocator<void> >&, std::allocator<void> > >]::<lambda(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&)>[m[Kâ€™, is used but never defined [[01;31m[K-fpermissive[m[K]
[6.486s]   667 |       [01;31m[Kfunction<_Res(_ArgTypes...)>[m[K::
[6.487s]       |       [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[6.773s] make[2]: *** [CMakeFiles/torque_controller.dir/build.make:63: CMakeFiles/torque_controller.dir/src/torque_controller.cpp.o] Error 1
[6.774s] make[1]: *** [CMakeFiles/Makefile2:107: CMakeFiles/torque_controller.dir/all] Error 2
[6.774s] make: *** [Makefile:141: all] Error 2
[6.829s] Invoked command in '/home/xinchen/Dev/SRTP/build/motor_controller' returned '2': AMENT_PREFIX_PATH=/home/xinchen/Dev/SRTP/install/custom_interface:${AMENT_PREFIX_PATH} CMAKE_PREFIX_PATH=/home/xinchen/Dev/SRTP/install/custom_interface:/home/xinchen/Dev/SRTP/install/motor_controller:/home/xinchen/Dev/SRTP/install/launch_files:/home/xinchen/Dev/SRTP/install/dynamixel_workbench:/home/xinchen/Dev/SRTP/install/dynamixel_workbench_toolbox:/home/xinchen/Dev/SRTP/install/dynamixel_sdk_examples:/home/xinchen/Dev/SRTP/install/dynamixel_sdk_custom_interfaces:/home/xinchen/Dev/SRTP/install/dynamixel_sdk:/opt/ros/foxy LD_LIBRARY_PATH=/home/xinchen/Dev/SRTP/install/custom_interface/lib:${LD_LIBRARY_PATH} PYTHONPATH=/home/xinchen/Dev/SRTP/install/custom_interface/lib/python3.8/site-packages:${PYTHONPATH} /usr/bin/cmake --build /home/xinchen/Dev/SRTP/build/motor_controller -- -j6 -l6
